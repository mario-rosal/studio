import type { Execution, Parameter, User } from './types';

export const executions: Execution[] = [
  {
    id: "exec_1",
    flow_name: "Customer Onboarding",
    status: "Success",
    timestamp: new Date(Date.now() - 1 * 60 * 1000).toISOString(),
    duration: 12.5,
    input_type: "email",
    input_data: "new.customer@example.com",
    output_type: "database",
    output_data: "User ID 123 created",
    logs: "2023-10-27 10:00:00 - INFO: Starting flow 'Customer Onboarding'\n2023-10-27 10:00:01 - INFO: Parsing email input\n2023-10-27 10:00:05 - INFO: Creating user in database\n2023-10-27 10:00:12 - INFO: Flow completed successfully",
  },
  {
    id: "exec_2",
    flow_name: "Invoice Processing",
    status: "Failure",
    timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),
    duration: 5.2,
    input_type: "pdf",
    input_data: "invoice_abc.pdf",
    output_type: "json",
    output_data: "{'error': 'Invalid PDF format'}",
    logs: "2023-10-27 09:55:00 - INFO: Starting flow 'Invoice Processing'\n2023-10-27 09:55:01 - INFO: Reading PDF input\n2023-10-27 09:55:05 - ERROR: Failed to parse PDF content. Error: Invalid PDF format.",
  },
  {
    id: "exec_3",
    flow_name: "Daily Report Generation",
    status: "Success",
    timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 125.0,
    input_type: "database",
    input_data: "Query: SELECT * FROM sales",
    output_type: "email",
    output_data: "Sent to daily-reports@example.com",
    logs: "2023-10-26 08:00:00 - INFO: Starting flow 'Daily Report Generation'\n2023-10-26 08:02:05 - INFO: Report generated and sent.",
  },
  {
    id: "exec_4",
    flow_name: "Social Media Posting",
    status: "Success",
    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 30.8,
    input_type: "text",
    input_data: "New blog post is live!",
    output_type: "json",
    output_data: "{'postId': 'xyz789'}",
    logs: "2023-10-25 15:30:00 - INFO: Posting to social media channels.\n2023-10-25 15:30:30 - INFO: Posted successfully.",
  },
   {
    id: "exec_5",
    flow_name: "Inventory Update",
    status: "Success",
    timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 45.1,
    input_type: "json",
    input_data: "{'sku': 'SHOE-01', 'quantity': 50}",
    output_type: "database",
    output_data: "Inventory for SHOE-01 updated.",
    logs: "2023-10-24 11:00:00 - INFO: Updating inventory.\n2023-10-24 11:00:45 - INFO: Update complete.",
  },
  {
    id: "exec_6",
    flow_name: "Customer Onboarding",
    status: "Failure",
    timestamp: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 15.3,
    input_type: "email",
    input_data: "test.user@example.com",
    output_type: "json",
    output_data: "{'error': 'Email already exists'}",
    logs: "2023-10-23 14:00:00 - INFO: Starting flow 'Customer Onboarding'.\n2023-10-23 14:00:15 - ERROR: Email already registered.",
  },
  {
    id: "exec_7",
    flow_name: "Lead Qualification",
    status: "Success",
    timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 62.0,
    input_type: "file",
    input_data: "leads.csv",
    output_type: "database",
    output_data: "15 new leads qualified and added.",
    logs: "2023-10-22 09:00:00 - INFO: Processing new leads from CSV.\n2023-10-22 09:01:02 - INFO: Leads qualified.",
  },
  {
    id: "exec_8",
    flow_name: "Invoice Processing",
    status: "Success",
    timestamp: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 8.9,
    input_type: "pdf",
    input_data: "invoice_def.pdf",
    output_type: "database",
    output_data: "Invoice DEF processed.",
    logs: "2023-10-21 16:20:00 - INFO: Processing invoice PDF.\n2023-10-21 16:20:08 - INFO: Invoice data extracted and saved.",
  },
  {
    id: "exec_9",
    flow_name: "User Deactivation",
    status: "Success",
    timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 3.1,
    input_type: "json",
    input_data: "{'userId': 456}",
    output_type: "database",
    output_data: "User 456 deactivated.",
    logs: "2023-10-20 18:00:00 - INFO: Deactivating user.\n2023-10-20 18:00:03 - INFO: User status updated.",
  },
  {
    id: "exec_10",
    flow_name: "Data Backup",
    status: "Success",
    timestamp: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000).toISOString(),
    duration: 305.7,
    input_type: "database",
    input_data: "All tables",
    output_type: "file",
    output_data: "backup_2023-10-19.sql.gz",
    logs: "2023-10-19 02:00:00 - INFO: Starting nightly backup.\n2023-10-19 02:05:05 - INFO: Backup complete.",
  },
];

export const parameters: Parameter[] = [
    {
        id: "param_1",
        key: "API_ENDPOINT_PAYMENTS",
        value: "https://api.stripe.com/v1",
        description: "The base URL for the Stripe Payments API.",
    },
    {
        id: "param_2",
        key: "SUPPORT_EMAIL_ADDRESS",
        value: "support@mytaskpanel.com",
        description: "Email address for customer support inquiries.",
    },
    {
        id: "param_3",
        key: "MAX_RETRIES",
        value: "3",
        description: "Maximum number of retries for failed API calls.",
    },
    {
        id: "param_4",
        key: "DEFAULT_CURRENCY",
        value: "USD",
        description: "Default currency for financial transactions.",
    }
];

export const users: User[] = [
    {
        id: "user_1",
        name: "Alice Johnson",
        email: "alice@example.com",
        avatar: "https://i.pravatar.cc/150?u=alice",
        role: "Administrator",
        status: "Active",
    },
    {
        id: "user_2",
        name: "Bob Williams",
        email: "bob@example.com",
        avatar: "https://i.pravatar.cc/150?u=bob",
        role: "Technician",
        status: "Active",
    },
    {
        id: "user_3",
        name: "Charlie Brown",
        email: "charlie@example.com",
        avatar: "https://i.pravatar.cc/150?u=charlie",
        role: "Viewer",
        status: "Locked",
    },
    {
        id: "user_4",
        name: "Diana Prince",
        email: "diana@example.com",
        avatar: "https://i.pravatar.cc/150?u=diana",
        role: "Technician",
        status: "Invited",
    }
];
